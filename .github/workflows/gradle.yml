name: nsfServer Github Action

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
permissions: write-all

jobs:
  # jobs는 build, deploy 2개가 있습니다.
  # jobs는 다른 러너(환경)에서 구동됩니다.
  # step는 같은 러너에서 구동됩니다.
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: make application-database.yml
        run: |
          cd ./src/main/resources
          
          # application-database.yml 파일 생성
          touch ./application-mysql.properties
          
          # GitHub-Actions 에서 설정한 값을 application-mysql.properties 파일에 쓰기
          echo "${{ secrets.MYSQL_PROPERTIES }}" >> ./application-mysql.properties
        shell: bash

        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build and Test with Gradle
        run : ./gradlew clean build


      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # 요건 Github에서 관리하는 시크릿, 아래서 다루겠습니다.
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install docker buildx 
        uses: docker/setup-buildx-action@v1
    # 도커 빌드
      - name: Build Docker Image
        run: |
          docker buildx create --use
          docker buildx inspect
          docker buildx build --platform linux/arm64/v8,linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/nsfserver:v2 --push .


  deploy:
    needs: build
    runs-on: self-hosted
    # if: ${{ needs.build == 'success' }
    steps:
    - name: ✨ 배포 스크립트 실행
      run: |
        sh /home/ubuntu/deploy.sh
            
